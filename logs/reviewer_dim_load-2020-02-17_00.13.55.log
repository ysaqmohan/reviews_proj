###################################################################################################################################
###################################################################################################################################
Load to ODS in progress
###################################################################################################################################
###################################################################################################################################
20/02/17 00:13:56 WARN Utils: Your hostname, DESKTOP-502C4I4 resolves to a loopback address: 127.0.1.1; using 192.168.1.25 instead (on interface wifi0)
20/02/17 00:13:56 WARN Utils: Set SPARK_LOCAL_IP if you need to bind to another address
20/02/17 00:13:57 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties
20/02/17 00:13:58 INFO SparkContext: Running Spark version 2.4.5
20/02/17 00:13:58 INFO SparkContext: Submitted application: ReviewsOdsSession
20/02/17 00:13:58 INFO SecurityManager: Changing view acls to: devetluser
20/02/17 00:13:58 INFO SecurityManager: Changing modify acls to: devetluser
20/02/17 00:13:58 INFO SecurityManager: Changing view acls groups to: 
20/02/17 00:13:58 INFO SecurityManager: Changing modify acls groups to: 
20/02/17 00:13:58 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(devetluser); groups with view permissions: Set(); users  with modify permissions: Set(devetluser); groups with modify permissions: Set()
20/02/17 00:13:59 INFO Utils: Successfully started service 'sparkDriver' on port 5944.
20/02/17 00:13:59 INFO SparkEnv: Registering MapOutputTracker
20/02/17 00:13:59 INFO SparkEnv: Registering BlockManagerMaster
20/02/17 00:13:59 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
20/02/17 00:13:59 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
20/02/17 00:13:59 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-8d341d70-b479-4297-b247-8023a3bfe42b
20/02/17 00:13:59 INFO MemoryStore: MemoryStore started with capacity 366.3 MB
20/02/17 00:13:59 INFO SparkEnv: Registering OutputCommitCoordinator
20/02/17 00:13:59 INFO Utils: Successfully started service 'SparkUI' on port 4040.
20/02/17 00:13:59 INFO SparkUI: Bound SparkUI to 0.0.0.0, and started at http://192.168.1.25:4040
20/02/17 00:14:00 INFO Executor: Starting executor ID driver on host localhost
20/02/17 00:14:00 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 5946.
20/02/17 00:14:00 INFO NettyBlockTransferService: Server created on 192.168.1.25:5946
20/02/17 00:14:00 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
20/02/17 00:14:00 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 192.168.1.25, 5946, None)
20/02/17 00:14:00 INFO BlockManagerMasterEndpoint: Registering block manager 192.168.1.25:5946 with 366.3 MB RAM, BlockManagerId(driver, 192.168.1.25, 5946, None)
20/02/17 00:14:00 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 192.168.1.25, 5946, None)
20/02/17 00:14:00 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 192.168.1.25, 5946, None)
20/02/17 00:14:01 INFO SharedState: Setting hive.metastore.warehouse.dir ('null') to the value of spark.sql.warehouse.dir ('file:/edw/Reviews/SourceCode/bash/spark-warehouse').
20/02/17 00:14:01 INFO SharedState: Warehouse path is 'file:/edw/Reviews/SourceCode/bash/spark-warehouse'.
20/02/17 00:14:01 INFO StateStoreCoordinatorRef: Registered StateStoreCoordinator endpoint
20/02/17 00:14:06 INFO ContextCleaner: Cleaned accumulator 1
20/02/17 00:14:06 INFO CodeGenerator: Code generated in 593.8497 ms
20/02/17 00:14:07 INFO HashAggregateExec: spark.sql.codegen.aggregate.map.twolevel.enabled is set to true, but current version of codegened fast hashmap does not support this aggregate.
20/02/17 00:14:07 INFO CodeGenerator: Code generated in 83.0225 ms
20/02/17 00:14:07 INFO HashAggregateExec: spark.sql.codegen.aggregate.map.twolevel.enabled is set to true, but current version of codegened fast hashmap does not support this aggregate.
20/02/17 00:14:07 INFO CodeGenerator: Code generated in 78.6953 ms
20/02/17 00:14:08 INFO SparkContext: Starting job: showString at NativeMethodAccessorImpl.java:0
20/02/17 00:14:08 INFO DAGScheduler: Registering RDD 2 (showString at NativeMethodAccessorImpl.java:0) as input to shuffle 0
20/02/17 00:14:08 INFO DAGScheduler: Got job 0 (showString at NativeMethodAccessorImpl.java:0) with 1 output partitions
20/02/17 00:14:08 INFO DAGScheduler: Final stage: ResultStage 1 (showString at NativeMethodAccessorImpl.java:0)
20/02/17 00:14:08 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 0)
20/02/17 00:14:08 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 0)
20/02/17 00:14:08 INFO DAGScheduler: Submitting ShuffleMapStage 0 (MapPartitionsRDD[2] at showString at NativeMethodAccessorImpl.java:0), which has no missing parents
20/02/17 00:14:08 INFO MemoryStore: Block broadcast_0 stored as values in memory (estimated size 17.1 KB, free 366.3 MB)
20/02/17 00:14:08 INFO MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 8.2 KB, free 366.3 MB)
20/02/17 00:14:08 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on 192.168.1.25:5946 (size: 8.2 KB, free: 366.3 MB)
20/02/17 00:14:08 INFO SparkContext: Created broadcast 0 from broadcast at DAGScheduler.scala:1163
20/02/17 00:14:08 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 0 (MapPartitionsRDD[2] at showString at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
20/02/17 00:14:08 INFO TaskSchedulerImpl: Adding task set 0.0 with 1 tasks
20/02/17 00:14:08 INFO TaskSetManager: Starting task 0.0 in stage 0.0 (TID 0, localhost, executor driver, partition 0, PROCESS_LOCAL, 7679 bytes)
20/02/17 00:14:08 INFO Executor: Running task 0.0 in stage 0.0 (TID 0)
20/02/17 00:16:36 WARN NettyRpcEnv: Ignored failure: java.util.concurrent.TimeoutException: Cannot receive any reply from 192.168.1.25:5944 in 10000 milliseconds
Exception in thread "RemoteBlock-temp-file-clean-thread" java.lang.OutOfMemoryError: GC overhead limit exceeded
20/02/17 00:16:36 ERROR Utils: Uncaught exception in thread driver-heartbeater
java.lang.OutOfMemoryError: GC overhead limit exceeded
	at java.lang.String.concat(String.java:2034)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:365)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:363)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:362)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:419)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:406)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:352)
	at org.apache.spark.util.ThreadUtils$.awaitResult(ThreadUtils.scala:222)
	at org.apache.spark.rpc.RpcTimeout.awaitResult(RpcTimeout.scala:75)
	at org.apache.spark.rpc.RpcEndpointRef.askSync(RpcEndpointRef.scala:92)
	at org.apache.spark.executor.Executor.org$apache$spark$executor$Executor$$reportHeartBeat(Executor.scala:846)
	at org.apache.spark.executor.Executor$$anon$2$$anonfun$run$1.apply$mcV$sp(Executor.scala:875)
	at org.apache.spark.executor.Executor$$anon$2$$anonfun$run$1.apply(Executor.scala:875)
	at org.apache.spark.executor.Executor$$anon$2$$anonfun$run$1.apply(Executor.scala:875)
	at org.apache.spark.util.Utils$.logUncaughtExceptions(Utils.scala:1945)
	at org.apache.spark.executor.Executor$$anon$2.run(Executor.scala:875)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
20/02/17 00:17:27 INFO JDBCRDD: closed connection
20/02/17 00:17:27 ERROR Executor: Exception in task 0.0 in stage 0.0 (TID 0)
java.lang.OutOfMemoryError: GC overhead limit exceeded
20/02/17 00:17:28 ERROR SparkUncaughtExceptionHandler: Uncaught exception in thread Thread[Executor task launch worker for task 0,5,main]
java.lang.OutOfMemoryError: GC overhead limit exceeded
20/02/17 00:17:28 INFO SparkContext: Invoking stop() from shutdown hook
20/02/17 00:17:28 WARN TaskSetManager: Lost task 0.0 in stage 0.0 (TID 0, localhost, executor driver): java.lang.OutOfMemoryError: GC overhead limit exceeded

20/02/17 00:17:28 ERROR TaskSetManager: Task 0 in stage 0.0 failed 1 times; aborting job
20/02/17 00:17:28 INFO TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool 
20/02/17 00:17:28 INFO SparkUI: Stopped Spark web UI at http://192.168.1.25:4040
20/02/17 00:17:28 INFO TaskSchedulerImpl: Cancelling stage 0
20/02/17 00:17:28 INFO TaskSchedulerImpl: Killing all running tasks in stage 0: Stage cancelled
20/02/17 00:17:28 INFO DAGScheduler: ShuffleMapStage 0 (showString at NativeMethodAccessorImpl.java:0) failed in 199.897 s due to Job aborted due to stage failure: Task 0 in stage 0.0 failed 1 times, most recent failure: Lost task 0.0 in stage 0.0 (TID 0, localhost, executor driver): java.lang.OutOfMemoryError: GC overhead limit exceeded

Driver stacktrace:
20/02/17 00:17:28 INFO DAGScheduler: Job 0 failed: showString at NativeMethodAccessorImpl.java:0, took 200.039771 s
20/02/17 00:17:28 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!
20/02/17 00:17:28 INFO MemoryStore: MemoryStore cleared
20/02/17 00:17:28 INFO BlockManager: BlockManager stopped
20/02/17 00:17:28 INFO BlockManagerMaster: BlockManagerMaster stopped
20/02/17 00:17:28 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!
20/02/17 00:17:28 INFO SparkContext: Successfully stopped SparkContext
20/02/17 00:17:28 INFO ShutdownHookManager: Shutdown hook called
20/02/17 00:17:28 INFO ShutdownHookManager: Deleting directory /tmp/spark-1228c4c7-16b0-4250-bdf5-8e524819a660
20/02/17 00:17:28 INFO ShutdownHookManager: Deleting directory /tmp/spark-64133a0b-32ca-493c-b287-e1f8e074883e/pyspark-c29a5e1c-9fa1-44fd-83a6-abe7a3786c40
20/02/17 00:17:28 INFO ShutdownHookManager: Deleting directory /tmp/spark-64133a0b-32ca-493c-b287-e1f8e074883e
Traceback (most recent call last):
  File "/edw/Reviews/SourceCode/python/reviewer_dim_load.py", line 32, in <module>
    Reviews_Ods_df.show(n=10)
  File "/edw/Reviews/spark-2.4.5-bin-hadoop2.7/python/lib/pyspark.zip/pyspark/sql/dataframe.py", line 380, in show
  File "/edw/Reviews/spark-2.4.5-bin-hadoop2.7/python/lib/py4j-0.10.7-src.zip/py4j/java_gateway.py", line 1257, in __call__
  File "/edw/Reviews/spark-2.4.5-bin-hadoop2.7/python/lib/pyspark.zip/pyspark/sql/utils.py", line 63, in deco
  File "/edw/Reviews/spark-2.4.5-bin-hadoop2.7/python/lib/py4j-0.10.7-src.zip/py4j/protocol.py", line 328, in get_return_value
py4j.protocol.Py4JJavaError: An error occurred while calling o37.showString.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 1 times, most recent failure: Lost task 0.0 in stage 0.0 (TID 0, localhost, executor driver): java.lang.OutOfMemoryError: GC overhead limit exceeded

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1891)
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1879)
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1878)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1878)
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:927)
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:927)
	at scala.Option.foreach(Option.scala:257)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:927)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:2112)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2061)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2050)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:738)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2061)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2082)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2101)
	at org.apache.spark.sql.execution.SparkPlan.executeTake(SparkPlan.scala:365)
	at org.apache.spark.sql.execution.CollectLimitExec.executeCollect(limit.scala:38)
	at org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$collectFromPlan(Dataset.scala:3389)
	at org.apache.spark.sql.Dataset$$anonfun$head$1.apply(Dataset.scala:2550)
	at org.apache.spark.sql.Dataset$$anonfun$head$1.apply(Dataset.scala:2550)
	at org.apache.spark.sql.Dataset$$anonfun$52.apply(Dataset.scala:3370)
	at org.apache.spark.sql.execution.SQLExecution$$anonfun$withNewExecutionId$1.apply(SQLExecution.scala:80)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:127)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:75)
	at org.apache.spark.sql.Dataset.withAction(Dataset.scala:3369)
	at org.apache.spark.sql.Dataset.head(Dataset.scala:2550)
	at org.apache.spark.sql.Dataset.take(Dataset.scala:2764)
	at org.apache.spark.sql.Dataset.getRows(Dataset.scala:254)
	at org.apache.spark.sql.Dataset.showString(Dataset.scala:291)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.GatewayConnection.run(GatewayConnection.java:238)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.OutOfMemoryError: GC overhead limit exceeded

